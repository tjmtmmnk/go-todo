//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var TodoDependencies = newTodoDependenciesTable("devel", "todo_dependencies", "")

type todoDependenciesTable struct {
	mysql.Table

	// Columns
	ID           mysql.ColumnInteger
	SourceTodoID mysql.ColumnInteger
	DestTodoID   mysql.ColumnInteger
	CreatedAt    mysql.ColumnTimestamp
	UpdatedAt    mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type TodoDependenciesTable struct {
	todoDependenciesTable

	NEW todoDependenciesTable
}

// AS creates new TodoDependenciesTable with assigned alias
func (a TodoDependenciesTable) AS(alias string) *TodoDependenciesTable {
	return newTodoDependenciesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new TodoDependenciesTable with assigned schema name
func (a TodoDependenciesTable) FromSchema(schemaName string) *TodoDependenciesTable {
	return newTodoDependenciesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new TodoDependenciesTable with assigned table prefix
func (a TodoDependenciesTable) WithPrefix(prefix string) *TodoDependenciesTable {
	return newTodoDependenciesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new TodoDependenciesTable with assigned table suffix
func (a TodoDependenciesTable) WithSuffix(suffix string) *TodoDependenciesTable {
	return newTodoDependenciesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newTodoDependenciesTable(schemaName, tableName, alias string) *TodoDependenciesTable {
	return &TodoDependenciesTable{
		todoDependenciesTable: newTodoDependenciesTableImpl(schemaName, tableName, alias),
		NEW:                   newTodoDependenciesTableImpl("", "new", ""),
	}
}

func newTodoDependenciesTableImpl(schemaName, tableName, alias string) todoDependenciesTable {
	var (
		IDColumn           = mysql.IntegerColumn("id")
		SourceTodoIDColumn = mysql.IntegerColumn("source_todo_id")
		DestTodoIDColumn   = mysql.IntegerColumn("dest_todo_id")
		CreatedAtColumn    = mysql.TimestampColumn("created_at")
		UpdatedAtColumn    = mysql.TimestampColumn("updated_at")
		allColumns         = mysql.ColumnList{IDColumn, SourceTodoIDColumn, DestTodoIDColumn, CreatedAtColumn, UpdatedAtColumn}
		mutableColumns     = mysql.ColumnList{SourceTodoIDColumn, DestTodoIDColumn, CreatedAtColumn, UpdatedAtColumn}
	)

	return todoDependenciesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:           IDColumn,
		SourceTodoID: SourceTodoIDColumn,
		DestTodoID:   DestTodoIDColumn,
		CreatedAt:    CreatedAtColumn,
		UpdatedAt:    UpdatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
